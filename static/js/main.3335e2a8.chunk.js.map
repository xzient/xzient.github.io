{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Testimonials.js","components/Portfolio.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme1","aboutme2","aboutme3","aboutme4","Resume","skillsDescription","skills","skillname","toLowerCase","Testimonials","ContactUs","skype","email","address","Footer","imagebaseurl","linkedinId","skypeid","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","portfolio","description","imgurl","testimonials","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3335e2a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n              Show navigation\n            </a>\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n              Hide navigation\n            </a>\n\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  Home\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  Skills\n                </a>\n              </li>\n\n              {/*\n                \n                <li>\n                <a className=\"smoothscroll\" href=\"#portfolio\">\n                  Works\n                </a>\n              </li>\n              */}\n\n              <li>\n                <a className=\"smoothscroll\" href=\"#contact\">\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            <div className=\"banner-text\">\n              <h1 className=\"responsive-headline\">{resumeData.name}</h1>\n              <h3 style={{ color: \"#edc1be\", fontFamily: \"sans-serif \" }}>\n                {resumeData.role}\n              </h3>\n              <h3 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n                {resumeData.roleDescription}\n              </h3>\n              <hr />\n              <ul className=\"social\">\n                {resumeData.socialLinks &&\n                  resumeData.socialLinks.map((item) => {\n                    return (\n                      <li key={item.name}>\n                        <a href={item.url} target=\"_blank\">\n                          <i className={item.className}></i>\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\">\n              <i className=\"icon-down-circle\"></i>\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img className=\"profile-pic\" src=\"images/xavier.jpg\" alt=\"\" />\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n            <p>{resumeData.aboutme1}</p>\n            <p>{resumeData.aboutme2}</p>\n            <p>{resumeData.aboutme3}</p>\n            <p>{resumeData.aboutme4}</p>\n            {/* <div className=\"row\">\n               <div className=\"columns contact-details\">\n                 <h2>\n                   <ContactDetails />\n                 </h2>\n                 <p className=\"address\">\n                   <span>{resumeData.name}</span>\n                   <br></br>\n                   <span>{resumeData.address}</span>\n                   <br></br>\n                   <span>{resumeData.email}</span>\n                   <br></br>\n                 </p>\n               </div>\n             </div>*/}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n        {/*<div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.education &&\n              resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfPassing} {item.YearOfPassing}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.work &&\n              resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfLeaving} {item.YearOfLeaving}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>*/}\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <p>{resumeData.skillsDescription}</p>\n\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.skills &&\n                  resumeData.skills.map((item) => {\n                    return (\n                      <li>\n                        <span\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\n                        ></span>\n                        <em>{item.skillname}</em>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        {/*<div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div>  \n            </div>  \n          </div>  \n        </div>   */}\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check out some of my works!</h1>\n            <div\n              id=\"portfolio-wrapper\"\n              className=\"bgrid-quarters s-bgrid-thirds cf\"\n            >\n              {resumeData.portfolio &&\n                resumeData.portfolio.map((item) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"item-wrap\">\n                        <a href=\"#modal-01\">\n                          <img src={`${item.imgurl}`} className=\"item-img\" />\n                          <div className=\"overlay\">\n                            <div className=\"portfolio-item-meta\">\n                              <h5>{item.name}</h5>\n                              <p>{item.description}</p>\n                            </div>\n                          </div>\n                        </a>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"ten columns\">\n            <h3 className=\"lead\">Contact Details</h3>\n          </div>\n        </div>\n        <div className=\"row\">\n          <aside className=\"eigth columns footer-widgets\">\n            <div className=\"widget\">\n              <h4> {resumeData.skype}</h4>\n              <h4>{resumeData.email}</h4>\n              <h4>{resumeData.address}</h4>\n            </div>\n          </aside>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  imagebaseurl: \"https://xzient.github.io/\",\n  name: \"Xavier Zientarski\",\n  role: \"Natural Language Processing, Artificial Intelligence, and Linguistics\",\n  address: \"Montreal, Canada\",\n  email: \"xzientarski@gmail.com\",\n  skype: \"Skype: xavier.zientarski\",\n  linkedinId: \"xavier-zientarski\",\n  skypeid: \"xavier.zientaarski\",\n  roleDescription:\n    \"I'm a computational linguist who cares about the environment, language preservation, and artificial intelligence.\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/xavier-zientarski/\",\n      className: \"fa fa-linkedin\",\n    },\n    {\n      name: \"github\",\n      url: \"http://github.com/xzient\",\n      className: \"fa fa-github\",\n    },\n    {\n      name: \"twitter\",\n      url: \"http://twitter.com/xzientarski\",\n      className: \"fa fa-twitter\",\n    },\n    {\n      name: \"medium\",\n      url: \"https://medium.com/@xavierzientarski\",\n      className: \"fa fa-medium\",\n    },\n  ],\n  aboutme1:\n    \"Hello. My name is Xavier. After completing my bachelor’s degrees in computer science and applied linguistics at the University of Maryland, I have decided to pursue a master’s degree in Computer Science with a focus on AI at Laval University in Quebec City. \",\n  aboutme2:\n    \"When it comes to computer science, I have mainly worked with Java and Python. Within Python, I have used different libraries such as Pandas, PyTorch, NLTK, OpenCV, and PyPlot. I have also used other libraries for computer vision, machine learning, and for data analysis. I have done both front end and back end programming. For front end, I have focused on creating simple Android apps with Android Studio. I am also interested in functional languages. While studying at Maryland, I was exposed to Ocaml, which really helped me admire functional programming.\",\n  aboutme3:\n    \"For Linguistics. I have worked with two Mayan languages: Ixil and Kaqchikel. I have worked on Georgian for two years. This work led me to write a research paper on Georgian lexical stress. I have a big interest for the preservation of Amerindian languages. Currently, I am looking projects related to Inuit languages or First Nation languages in Canada.\",\n  aboutme4:\n    \"In my everyday life, I keep an environmentally conscious life. I do my best to reduce my carbon footprint as I enjoy embarking on new projects related to environment preservation. I am also interested in permaculture, minimalism, zero waste lifestyle, and veganism. This is a life style that is suited to my ideals. For this reason, I treat people having ideals and lifestyles with the upmost respect and equality. Not everyone has the same life priorities, and I am here to learn from others as I am to contribute with the little knowledge I have to build a better world.\",\n  education: [\n    {\n      UniversityName: \"The LNM Insitute of Information Technology\",\n      specialization: \"Some specialization\",\n      MonthOfPassing: \"Aug\",\n      YearOfPassing: \"2020\",\n      Achievements: \"Some Achievements\",\n    },\n    {\n      UniversityName: \"Some University\",\n      specialization: \"Some specialization\",\n      MonthOfPassing: \"Jan\",\n      YearOfPassing: \"2018\",\n      Achievements: \"Some Achievements\",\n    },\n  ],\n  work: [\n    {\n      CompanyName: \"Some Company\",\n      specialization: \"Some specialization\",\n      MonthOfLeaving: \"Jan\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"Some Achievements\",\n    },\n    {\n      CompanyName: \"Some Company\",\n      specialization: \"Some specialization\",\n      MonthOfLeaving: \"Jan\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"Some Achievements\",\n    },\n  ],\n  skillsDescription:\n    \"Besides the skills shown below, I have some experience with R and SQL. I have used these for data analysis while doing research. I also know LaTeX which I constantly use for writing reports and homework at school. Lastly. I have used Praat and Elan for phonological analysis in linguistics.\",\n  skills: [\n    {\n      skillname: \"Python\",\n    },\n    {\n      skillname: \"Java\",\n    },\n    {\n      skillname: \"C/C++\",\n    },\n    {\n      skillname: \"MATLAB\",\n    },\n    {\n      skillname: \"OCaml\",\n    },\n  ],\n  portfolio: [\n    {\n      name: \"project1\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/retrocam.jpg\",\n    },\n    {\n      name: \"project2\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/coffee.jpg\",\n    },\n    {\n      name: \"project3\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/origami.jpg\",\n    },\n    {\n      name: \"project4\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/console.jpg\",\n    },\n  ],\n  testimonials: [\n    {\n      /*\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    },\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    */\n    },\n  ],\n};\n\nexport default resumeData;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Resume from \"./components/Resume\";\nimport Portfolio from \"./components/Portfolio\";\nimport Testimonials from \"./components/Testimonials\";\nimport ContactUs from \"./components/ContactUs\";\nimport Footer from \"./components/Footer\";\nimport resumeData from \"./resumeData\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        {/*<Portfolio resumeData={resumeData}/>*/}\n        <Testimonials resumeData={resumeData} />\n        <ContactUs resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
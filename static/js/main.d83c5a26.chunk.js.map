{"version":3,"sources":["components/LanguageSelector.js","components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Testimonials.js","components/ContactUs.js","components/Footer.js","resumeData.js","i18n.js","App.js","serviceWorker.js","index.js"],"names":["LanguageSelector","useTranslation","i18n","t","onChange","event","changeLanguage","target","value","type","id","name","defaultChecked","for","Home","Skills","About","Works","Contact","Header","resumeData","this","props","Fragment","className","href","title","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","Component","AboutMe","src","alt","aboutme1","aboutme2","aboutme3","aboutme4","Resume","skillsDescription","skills","skillname","toLowerCase","Portfolio","Testimonials","ContactDetails","ContactUs","skype","email","address","Footer","Name","Role","RoleDescription","AboutMe1","AboutMe2","AboutMe3","AboutMe4","Address","SkillsText","Skype","imagebaseurl","linkedinId","skypeid","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","portfolio","description","imgurl","testimonials","use","Backend","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","App","fallback","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d83c5a26.chunk.js","sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst LanguageSelector = () => {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = (event) => {\n    i18n.changeLanguage(event.target.value);\n  };\n\n  return (\n    <div onChange={changeLanguage}>\n      <input\n        type=\"radio\"\n        id=\"radioEN\"\n        value=\"en\"\n        name=\"language\"\n        defaultChecked\n      />\n      <label for=\"radioEN\">EN</label>\n\n      <input type=\"radio\" id=\"radioES\" value=\"es\" name=\"language\" />\n      <label for=\"radioES\">ES</label>\n      <input type=\"radio\" id=\"radioFR\" value=\"fr\" name=\"language\" />\n      <label for=\"radioFR\">FR</label>\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n","import React, { Component } from \"react\";\nimport LanguageSelector from \"./LanguageSelector\";\n\nimport { useTranslation } from \"react-i18next\";\n\nconst Home = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"home.label\")}</div>;\n};\nconst Skills = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"skills.label\")}</div>;\n};\nconst About = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"about.label\")}</div>;\n};\nconst Works = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"works.label\")}</div>;\n};\nconst Contact = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"contact.label\")}</div>;\n};\n\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n              Show navigation\n            </a>\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n              Hide navigation\n            </a>\n\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  <Home />\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#about\">\n                  <About />\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  <Skills />\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#portfolio\">\n                  <Works />\n                </a>\n              </li>\n\n              <li>\n                <a className=\"smoothscroll\" href=\"#contact\">\n                  <Contact />\n                </a>\n              </li>\n            </ul>\n            <ul id=\"nav2\">\n              <li>\n                <LanguageSelector />\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            <div className=\"banner-text\">\n              <h1 className=\"responsive-headline\">{resumeData.name}</h1>\n              <h3 style={{ color: \"#edc1be\", fontFamily: \"sans-serif \" }}>\n                {resumeData.role}\n              </h3>\n              <h3 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n                {resumeData.roleDescription}\n              </h3>\n              <hr />\n              <ul className=\"social\">\n                {resumeData.socialLinks &&\n                  resumeData.socialLinks.map((item) => {\n                    return (\n                      <li key={item.name}>\n                        <a href={item.url} target=\"_blank\">\n                          <i className={item.className}></i>\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\">\n              <i className=\"icon-down-circle\"></i>\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\n\nconst ContactDetails = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"contactdetails.label\")}</div>;\n};\n\nconst AboutMe = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"aboutme.label\")}</div>;\n};\n\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img className=\"profile-pic\" src=\"images/xavier.jpg\" alt=\"\" />\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <h2>\n              <AboutMe />\n            </h2>\n            <p>{resumeData.aboutme1}</p>\n            <p>{resumeData.aboutme2}</p>\n            <p>{resumeData.aboutme3}</p>\n            <p>{resumeData.aboutme4}</p>\n            {/* <div className=\"row\">\n              <div className=\"columns contact-details\">\n                <h2>\n                  <ContactDetails />\n                </h2>\n                <p className=\"address\">\n                  <span>{resumeData.name}</span>\n                  <br></br>\n                  <span>{resumeData.address}</span>\n                  <br></br>\n                  <span>{resumeData.email}</span>\n                  <br></br>\n                </p>\n              </div>\n            </div>*/}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\n\nconst Skills = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"skills.label\")}</div>;\n};\n\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n        {/*<div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.education &&\n              resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfPassing} {item.YearOfPassing}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.work &&\n              resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfLeaving} {item.YearOfLeaving}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>*/}\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>\n                <Skills />\n              </span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <p>{resumeData.skillsDescription}</p>\n\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.skills &&\n                  resumeData.skills.map((item) => {\n                    return (\n                      <li>\n                        <span\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\n                        ></span>\n                        <em>{item.skillname}</em>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Portfolio = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"portfolio.label\")}</div>;\n};\n\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>\n              <Portfolio />\n            </h1>\n            <div\n              id=\"portfolio-wrapper\"\n              className=\"bgrid-quarters s-bgrid-thirds cf\"\n            >\n              {resumeData.portfolio &&\n                resumeData.portfolio.map((item) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"item-wrap\">\n                        <a href=\"#modal-01\">\n                          <img src={`${item.imgurl}`} className=\"item-img\" />\n                          <div className=\"overlay\">\n                            <div className=\"portfolio-item-meta\">\n                              <h5>{item.name}</h5>\n                              <p>{item.description}</p>\n                            </div>\n                          </div>\n                        </a>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        {/*<div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div>  \n            </div>  \n          </div>  \n        </div>   */}\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ContactDetails = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"contactdetails.label\")}</div>;\n};\n\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"ten columns\">\n            <h3 className=\"lead\">\n              <ContactDetails />\n            </h3>\n          </div>\n        </div>\n        <div className=\"row\">\n          <aside className=\"eigth columns footer-widgets\">\n            <div className=\"widget\">\n              <h4> {resumeData.skype}</h4>\n              <h4>{resumeData.email}</h4>\n              <h4>{resumeData.address}</h4>\n            </div>\n          </aside>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Name = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"name.label\")}</div>;\n};\nconst Role = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"role.label\")}</div>;\n};\nconst RoleDescription = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"roledescription.label\")}</div>;\n};\nconst AboutMe1 = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"aboutmetext1.label\")}</div>;\n};\nconst AboutMe2 = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"aboutmetext2.label\")}</div>;\n};\nconst AboutMe3 = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"aboutmetext3.label\")}</div>;\n};\nconst AboutMe4 = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"aboutmetext4.label\")}</div>;\n};\n\nconst Address = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"address.label\")}</div>;\n};\n\nconst SkillsText = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"skillstext.label\")}</div>;\n};\n\nconst Email = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"email.label\")}</div>;\n};\n\nconst Skype = () => {\n  const { t, i18n } = useTranslation();\n  return <div>{t(\"skype.label\")}</div>;\n};\n\nlet resumeData = {\n  imagebaseurl: \"https://xzient.github.io/\",\n  name: <Name />,\n  role: <Role />,\n  address: <Address />,\n  email: \"xzientarski@gmail.com\",\n  skype: <Skype />,\n  linkedinId: \"xavier-zientarski\",\n  skypeid: \"xavier.zientaarski\",\n  roleDescription: <RoleDescription />,\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/xavier-zientarski/\",\n      className: \"fa fa-linkedin\",\n    },\n    {\n      name: \"github\",\n      url: \"http://github.com/xzient\",\n      className: \"fa fa-github\",\n    },\n    {\n      name: \"twitter\",\n      url: \"http://twitter.com/xzientarski\",\n      className: \"fa fa-twitter\",\n    },\n    {\n      name: \"medium\",\n      url: \"https://medium.com/@xavierzientarski\",\n      className: \"fa fa-medium\",\n    },\n  ],\n  aboutme1: <AboutMe1 />,\n  aboutme2: <AboutMe2 />,\n  aboutme3: <AboutMe3 />,\n  aboutme4: <AboutMe4 />,\n  education: [\n    {\n      UniversityName: \"The LNM Insitute of Information Technology\",\n      specialization: \"Some specialization\",\n      MonthOfPassing: \"Aug\",\n      YearOfPassing: \"2020\",\n      Achievements: \"Some Achievements\",\n    },\n    {\n      UniversityName: \"Some University\",\n      specialization: \"Some specialization\",\n      MonthOfPassing: \"Jan\",\n      YearOfPassing: \"2018\",\n      Achievements: \"Some Achievements\",\n    },\n  ],\n  work: [\n    {\n      CompanyName: \"Some Company\",\n      specialization: \"Some specialization\",\n      MonthOfLeaving: \"Jan\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"Some Achievements\",\n    },\n    {\n      CompanyName: \"Some Company\",\n      specialization: \"Some specialization\",\n      MonthOfLeaving: \"Jan\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"Some Achievements\",\n    },\n  ],\n  skillsDescription: <SkillsText />,\n  skills: [\n    {\n      skillname: \"Python\",\n    },\n    {\n      skillname: \"Java\",\n    },\n    {\n      skillname: \"PHP\",\n    },\n    {\n      skillname: \"C/C++\",\n    },\n    {\n      skillname: \"MATLAB\",\n    },\n    {\n      skillname: \"OCaml\",\n    },\n  ],\n  portfolio: [\n    {\n      name: \"project1\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/retrocam.jpg\",\n    },\n    {\n      name: \"project2\",\n      description: \"reasearchpaper\",\n      imgurl: \"images/portfolio/coffee.jpg\",\n    },\n    {\n      name: \"project3\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/origami.jpg\",\n    },\n    {\n      name: \"project4\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/console.jpg\",\n    },\n  ],\n  testimonials: [\n    {\n      /*\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    },\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    */\n    },\n  ],\n};\n\nexport default resumeData;\n","import i18n from \"i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: \"en\",\n    backend: {\n      /* translation file path */\n      loadPath: \"/assets/i18n/{{ns}}/{{lng}}.json\",\n    },\n    fallbackLng: \"en\",\n    debug: true,\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n      formatSeparator: \",\",\n    },\n    react: {\n      wait: true,\n    },\n  });\n\nexport default i18n;\n","import React, { Component, Suspense } from \"react\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Resume from \"./components/Resume\";\nimport Portfolio from \"./components/Portfolio\";\nimport Testimonials from \"./components/Testimonials\";\nimport ContactUs from \"./components/ContactUs\";\nimport Footer from \"./components/Footer\";\nimport resumeData from \"./resumeData\";\n\nimport \"./i18n\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Suspense fallback={null}>\n          <Header resumeData={resumeData} />\n\n          <About resumeData={resumeData} />\n          <Resume resumeData={resumeData} />\n          {/*<Portfolio resumeData={resumeData}/>*/}\n          <Testimonials resumeData={resumeData} />\n          <ContactUs resumeData={resumeData} />\n          <Footer resumeData={resumeData} />\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}